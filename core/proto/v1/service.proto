syntax = "proto3";

option go_package = "github.com/luckystrike561/vizimind/core/proto/v1";

package proto.core.v1;

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service CoreService {
  rpc GetActivityByOrderID(GetActivityByOrderIDRequest)
      returns (GetActivityByOrderIDResponse) {
    option (google.api.http) = {
      get : "/activity/order/{order_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Get activity"
      description : "Returns the activity"
      tags : "activity"
    };
  }

  rpc DownloadGPX(DownloadGPXRequest) returns (DownloadGPXResponse) {
    option (google.api.http) = {
      get : "/gpx/{sku}/download"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Get gpx"
      description : "Returns the gpx"
      tags : "gpx"
    };
  }

  rpc CreateActivity(CreateActivityRequest) returns (Activity) {
    option (google.api.http) = {
      post : "/activity"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Create activity"
      description : ""
      tags : "activity"
    };
  }

  rpc DeleteActivity(DeleteActivityRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/activity/{sku}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Delete activity"
      description : ""
      tags : "activity"
    };
  }

  rpc ListActivity(ListActivityRequest) returns (ListActivityResponse) {
    option (google.api.http) = {
      get : "/activities"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Get activity"
      description : ""
      tags : "activity"
    };
  }

  rpc GetActivity(GetActivityRequest) returns (Activity) {
    option (google.api.http) = {
      get : "/activity/{sku}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Get activity"
      description : "Returns the activity"
      tags : "activity"
    };
  }
}

message GetActivityByOrderIDRequest {
  string order_id = 1;
  string language = 2;
}

message Activity {
  string sku = 1;
  string gpx = 2;
  string product_id = 3;
  map<string, string> names = 4;
  map<string, string> descriptions = 5;
  string image = 6;
  map<string, string> transports = 7;
  Supplier supplier = 8;
  map<string, string> extra_meeting_info = 9;
}

message Supplier {
  string name = 1;
  string email = 2;
  string phone = 3;
  string address = 4;
  string city = 5;
  string zipcode = 6;
  string country = 7;
}

message GetActivityByOrderIDResponse {
  string order_id = 1;
  string product_id = 2;
  string name = 3;
  string sku = 4;
  string short_description = 5;
  string geo_lat = 6;
  string geo_lon = 7;
  string distance = 8;
  string location_address = 9;
  string city = 10;
  string zipcode = 11;
  string city_id = 12;
  string region_id = 13;
  string poi_ids = 14;
  string country_id = 15;
  string thumbnail = 16;
  string image = 17;
  string image_label = 18;
  string rating_summary = 19;
  string reviews_count = 20;
  string Description = 21;
  string date = 22;
  string purchased_at = 23;
  repeated string resources = 24;
  Activity details = 25;
}

message DownloadGPXRequest { string sku = 1; }

message DownloadGPXResponse { string gpx = 1; }

message CreateActivityRequest {
  string sku = 1;
  string gpx = 2;
  string product_id = 3;
  map<string, string> names = 4;
  map<string, string> descriptions = 5;
  string image = 6;
  map<string, string> transports = 7;
  Supplier supplier = 8;
  map<string, string> extra_meeting_info = 9;
}

message DeleteActivityRequest { string sku = 1; }

message ListActivityRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message ListActivityResponse {
  repeated Activity items = 1;
  int32 total = 2;
}

message GetActivityRequest { string sku = 1; }
