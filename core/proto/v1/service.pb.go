// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: proto/v1/service.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId string `protobuf:"bytes,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	Language      string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetReservationRequest) Reset() {
	*x = GetReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationRequest) ProtoMessage() {}

func (x *GetReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationRequest.ProtoReflect.Descriptor instead.
func (*GetReservationRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetReservationRequest) GetReservationId() string {
	if x != nil {
		return x.ReservationId
	}
	return ""
}

func (x *GetReservationRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reservation      string `protobuf:"bytes,1,opt,name=reservation,proto3" json:"reservation,omitempty"`
	ProductId        string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sku              string `protobuf:"bytes,4,opt,name=sku,proto3" json:"sku,omitempty"`
	ShortDescription string `protobuf:"bytes,5,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	GeoLat           string `protobuf:"bytes,6,opt,name=geo_lat,json=geoLat,proto3" json:"geo_lat,omitempty"`
	GeoLon           string `protobuf:"bytes,7,opt,name=geo_lon,json=geoLon,proto3" json:"geo_lon,omitempty"`
	Distance         string `protobuf:"bytes,8,opt,name=distance,proto3" json:"distance,omitempty"`
	LocationAddress  string `protobuf:"bytes,9,opt,name=location_address,json=locationAddress,proto3" json:"location_address,omitempty"`
	City             string `protobuf:"bytes,10,opt,name=city,proto3" json:"city,omitempty"`
	Zipcode          string `protobuf:"bytes,11,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	CityId           string `protobuf:"bytes,12,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	RegionId         string `protobuf:"bytes,13,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	PoiIds           string `protobuf:"bytes,14,opt,name=poi_ids,json=poiIds,proto3" json:"poi_ids,omitempty"`
	CountryId        string `protobuf:"bytes,15,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Thumbnail        string `protobuf:"bytes,16,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Image            string `protobuf:"bytes,17,opt,name=image,proto3" json:"image,omitempty"`
	ImageLabel       string `protobuf:"bytes,18,opt,name=image_label,json=imageLabel,proto3" json:"image_label,omitempty"`
	RatingSummary    string `protobuf:"bytes,19,opt,name=rating_summary,json=ratingSummary,proto3" json:"rating_summary,omitempty"`
	ReviewsCount     string `protobuf:"bytes,20,opt,name=reviews_count,json=reviewsCount,proto3" json:"reviews_count,omitempty"`
	Description      string `protobuf:"bytes,21,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GetReservationResponse) Reset() {
	*x = GetReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationResponse) ProtoMessage() {}

func (x *GetReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationResponse.ProtoReflect.Descriptor instead.
func (*GetReservationResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetReservationResponse) GetReservation() string {
	if x != nil {
		return x.Reservation
	}
	return ""
}

func (x *GetReservationResponse) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *GetReservationResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetReservationResponse) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *GetReservationResponse) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *GetReservationResponse) GetGeoLat() string {
	if x != nil {
		return x.GeoLat
	}
	return ""
}

func (x *GetReservationResponse) GetGeoLon() string {
	if x != nil {
		return x.GeoLon
	}
	return ""
}

func (x *GetReservationResponse) GetDistance() string {
	if x != nil {
		return x.Distance
	}
	return ""
}

func (x *GetReservationResponse) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *GetReservationResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GetReservationResponse) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *GetReservationResponse) GetCityId() string {
	if x != nil {
		return x.CityId
	}
	return ""
}

func (x *GetReservationResponse) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetReservationResponse) GetPoiIds() string {
	if x != nil {
		return x.PoiIds
	}
	return ""
}

func (x *GetReservationResponse) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *GetReservationResponse) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *GetReservationResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetReservationResponse) GetImageLabel() string {
	if x != nil {
		return x.ImageLabel
	}
	return ""
}

func (x *GetReservationResponse) GetRatingSummary() string {
	if x != nil {
		return x.RatingSummary
	}
	return ""
}

func (x *GetReservationResponse) GetReviewsCount() string {
	if x != nil {
		return x.ReviewsCount
	}
	return ""
}

func (x *GetReservationResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateGPXRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sku string `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	Gpx string `protobuf:"bytes,2,opt,name=gpx,proto3" json:"gpx,omitempty"`
}

func (x *CreateGPXRequest) Reset() {
	*x = CreateGPXRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGPXRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGPXRequest) ProtoMessage() {}

func (x *CreateGPXRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGPXRequest.ProtoReflect.Descriptor instead.
func (*CreateGPXRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGPXRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *CreateGPXRequest) GetGpx() string {
	if x != nil {
		return x.Gpx
	}
	return ""
}

type DownloadGPXRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sku string `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
}

func (x *DownloadGPXRequest) Reset() {
	*x = DownloadGPXRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadGPXRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadGPXRequest) ProtoMessage() {}

func (x *DownloadGPXRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadGPXRequest.ProtoReflect.Descriptor instead.
func (*DownloadGPXRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadGPXRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

type DownloadGPXResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gpx string `protobuf:"bytes,1,opt,name=gpx,proto3" json:"gpx,omitempty"`
}

func (x *DownloadGPXResponse) Reset() {
	*x = DownloadGPXResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadGPXResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadGPXResponse) ProtoMessage() {}

func (x *DownloadGPXResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadGPXResponse.ProtoReflect.Descriptor instead.
func (*DownloadGPXResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadGPXResponse) GetGpx() string {
	if x != nil {
		return x.Gpx
	}
	return ""
}

var File_proto_v1_service_proto protoreflect.FileDescriptor

var file_proto_v1_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x84,
	0x05, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x65, 0x6f, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x65, 0x6f, 0x4c, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x65, 0x6f, 0x5f, 0x6c, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6f, 0x4c, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69,
	0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f,
	0x69, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x50, 0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x70, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x70, 0x78, 0x22, 0x26, 0x0a,
	0x12, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x50, 0x58, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x6b, 0x75, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x47, 0x50, 0x58, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x67, 0x70, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x70, 0x78, 0x32, 0xe1,
	0x03, 0x0a, 0x0b, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xbf,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60,
	0x92, 0x41, 0x37, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x47, 0x65, 0x74, 0x20, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x17, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x82, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x50, 0x58, 0x12, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x50, 0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3c, 0x92, 0x41, 0x2a, 0x0a, 0x03, 0x67, 0x70,
	0x78, 0x12, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x67, 0x70, 0x78, 0x1a, 0x17, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x20, 0x67, 0x70, 0x78, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x3a, 0x01, 0x2a, 0x22,
	0x04, 0x2f, 0x67, 0x70, 0x78, 0x12, 0x8a, 0x01, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x47, 0x50, 0x58, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x50,
	0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x47, 0x50, 0x58, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x92, 0x41,
	0x1f, 0x0a, 0x03, 0x67, 0x70, 0x78, 0x12, 0x07, 0x47, 0x65, 0x74, 0x20, 0x67, 0x70, 0x78, 0x1a,
	0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x70, 0x78,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x67, 0x70, 0x78, 0x2f, 0x7b, 0x73, 0x6b,
	0x75, 0x7d, 0x42, 0xa9, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65,
	0x35, 0x36, 0x31, 0x2f, 0x76, 0x69, 0x7a, 0x69, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x43, 0x58,
	0xaa, 0x02, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x3a, 0x43, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_service_proto_rawDescOnce sync.Once
	file_proto_v1_service_proto_rawDescData = file_proto_v1_service_proto_rawDesc
)

func file_proto_v1_service_proto_rawDescGZIP() []byte {
	file_proto_v1_service_proto_rawDescOnce.Do(func() {
		file_proto_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_service_proto_rawDescData)
	})
	return file_proto_v1_service_proto_rawDescData
}

var file_proto_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_v1_service_proto_goTypes = []interface{}{
	(*GetReservationRequest)(nil),  // 0: proto.core.v1.GetReservationRequest
	(*GetReservationResponse)(nil), // 1: proto.core.v1.GetReservationResponse
	(*CreateGPXRequest)(nil),       // 2: proto.core.v1.CreateGPXRequest
	(*DownloadGPXRequest)(nil),     // 3: proto.core.v1.DownloadGPXRequest
	(*DownloadGPXResponse)(nil),    // 4: proto.core.v1.DownloadGPXResponse
	(*emptypb.Empty)(nil),          // 5: google.protobuf.Empty
}
var file_proto_v1_service_proto_depIdxs = []int32{
	0, // 0: proto.core.v1.CoreService.GetReservation:input_type -> proto.core.v1.GetReservationRequest
	2, // 1: proto.core.v1.CoreService.CreateGPX:input_type -> proto.core.v1.CreateGPXRequest
	3, // 2: proto.core.v1.CoreService.DownloadGPX:input_type -> proto.core.v1.DownloadGPXRequest
	1, // 3: proto.core.v1.CoreService.GetReservation:output_type -> proto.core.v1.GetReservationResponse
	5, // 4: proto.core.v1.CoreService.CreateGPX:output_type -> google.protobuf.Empty
	4, // 5: proto.core.v1.CoreService.DownloadGPX:output_type -> proto.core.v1.DownloadGPXResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_v1_service_proto_init() }
func file_proto_v1_service_proto_init() {
	if File_proto_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGPXRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadGPXRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadGPXResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_service_proto_goTypes,
		DependencyIndexes: file_proto_v1_service_proto_depIdxs,
		MessageInfos:      file_proto_v1_service_proto_msgTypes,
	}.Build()
	File_proto_v1_service_proto = out.File
	file_proto_v1_service_proto_rawDesc = nil
	file_proto_v1_service_proto_goTypes = nil
	file_proto_v1_service_proto_depIdxs = nil
}
